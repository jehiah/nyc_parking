// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LatLng A point on the earth represented as a latitude and longitude.
// swagger:model LatLng
type LatLng struct {

	// lat
	// Required: true
	Lat *float64 `json:"lat"`

	// lng
	// Required: true
	Lng *float64 `json:"lng"`
}

// Validate validates this lat lng
func (m *LatLng) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLat(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLng(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LatLng) validateLat(formats strfmt.Registry) error {

	if err := validate.Required("lat", "body", m.Lat); err != nil {
		return err
	}

	return nil
}

func (m *LatLng) validateLng(formats strfmt.Registry) error {

	if err := validate.Required("lng", "body", m.Lng); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LatLng) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LatLng) UnmarshalBinary(b []byte) error {
	var res LatLng
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
