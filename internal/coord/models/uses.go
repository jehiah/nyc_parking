// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Uses uses
// swagger:model Uses
type Uses string

const (

	// UsesPark captures enum value "park"
	UsesPark Uses = "park"

	// UsesLoadGoods captures enum value "load_goods"
	UsesLoadGoods Uses = "load_goods"

	// UsesLoadPassengers captures enum value "load_passengers"
	UsesLoadPassengers Uses = "load_passengers"

	// UsesNone captures enum value "none"
	UsesNone Uses = "none"
)

// for schema
var usesEnum []interface{}

func init() {
	var res []Uses
	if err := json.Unmarshal([]byte(`["park","load_goods","load_passengers","none"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		usesEnum = append(usesEnum, v)
	}
}

func (m Uses) validateUsesEnum(path, location string, value Uses) error {
	if err := validate.Enum(path, location, value, usesEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this uses
func (m Uses) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateUsesEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
