// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// TransactionRequirements Everything we need to have for a user in order for them to perform a transaction with a given
// system.
//
// swagger:model TransactionRequirements
type TransactionRequirements struct {

	// Claims that must be set in the payload of the user's JWT, such as `email` or `name`. Note
	// that this will not include claims that are used for validating the JWT, such as `iss` or
	// `aud`.
	//
	JwtClaims []string `json:"jwt_claims"`

	// Does the user need to link their account with one on this system? If true, you must use
	// the account linking flow described in the Users API in order to either create a new
	// account for this user or link an existing one.
	//
	LinkedAccount bool `json:"linked_account,omitempty"`

	// Fields that must be set directly via the Users API for this user. Fields are relative to
	// the root of the users object as returned from
	// `GET /${COORD_API_VERSION}/users/user/current` (e.g., `vehicle.license_plate.text`).
	// Refer to the Users API for information about how to set these fields.
	//
	UsersAPIFields []string `json:"users_api_fields"`
}

// Validate validates this transaction requirements
func (m *TransactionRequirements) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TransactionRequirements) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TransactionRequirements) UnmarshalBinary(b []byte) error {
	var res TransactionRequirements
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
