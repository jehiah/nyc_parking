// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jehiah/nyc_parking/internal/coord/models"
)

// GetByCurbIDReader is a Reader for the GetByCurbID structure.
type GetByCurbIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetByCurbIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetByCurbIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewGetByCurbIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetByCurbIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetByCurbIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetByCurbIDOK creates a GetByCurbIDOK with default headers values
func NewGetByCurbIDOK() *GetByCurbIDOK {
	return &GetByCurbIDOK{}
}

/*GetByCurbIDOK handles this case with default header values.

Segments of the requested curb.
*/
type GetByCurbIDOK struct {
	Payload *models.SegmentRulesFeatureCollection
}

func (o *GetByCurbIDOK) Error() string {
	return fmt.Sprintf("[GET /bycurb/{id}/all_rules][%d] getByCurbIdOK  %+v", 200, o.Payload)
}

func (o *GetByCurbIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SegmentRulesFeatureCollection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByCurbIDForbidden creates a GetByCurbIDForbidden with default headers values
func NewGetByCurbIDForbidden() *GetByCurbIDForbidden {
	return &GetByCurbIDForbidden{}
}

/*GetByCurbIDForbidden handles this case with default header values.

This method requires an `access_key` and it is either missing or invalid, or the the credentials provided are not sufficient for access to the specified resource.
*/
type GetByCurbIDForbidden struct {
	Payload *models.Error
}

func (o *GetByCurbIDForbidden) Error() string {
	return fmt.Sprintf("[GET /bycurb/{id}/all_rules][%d] getByCurbIdForbidden  %+v", 403, o.Payload)
}

func (o *GetByCurbIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByCurbIDNotFound creates a GetByCurbIDNotFound with default headers values
func NewGetByCurbIDNotFound() *GetByCurbIDNotFound {
	return &GetByCurbIDNotFound{}
}

/*GetByCurbIDNotFound handles this case with default header values.

No curb exists with this ID.
*/
type GetByCurbIDNotFound struct {
	Payload *models.Error
}

func (o *GetByCurbIDNotFound) Error() string {
	return fmt.Sprintf("[GET /bycurb/{id}/all_rules][%d] getByCurbIdNotFound  %+v", 404, o.Payload)
}

func (o *GetByCurbIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByCurbIDDefault creates a GetByCurbIDDefault with default headers values
func NewGetByCurbIDDefault(code int) *GetByCurbIDDefault {
	return &GetByCurbIDDefault{
		_statusCode: code,
	}
}

/*GetByCurbIDDefault handles this case with default header values.

Unexpected error
*/
type GetByCurbIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get by curb id default response
func (o *GetByCurbIDDefault) Code() int {
	return o._statusCode
}

func (o *GetByCurbIDDefault) Error() string {
	return fmt.Sprintf("[GET /bycurb/{id}/all_rules][%d] get_by_curb_id default  %+v", o._statusCode, o.Payload)
}

func (o *GetByCurbIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
