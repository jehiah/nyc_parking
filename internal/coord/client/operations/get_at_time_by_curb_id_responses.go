// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jehiah/nyc_parking/internal/coord/models"
)

// GetAtTimeByCurbIDReader is a Reader for the GetAtTimeByCurbID structure.
type GetAtTimeByCurbIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAtTimeByCurbIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAtTimeByCurbIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewGetAtTimeByCurbIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetAtTimeByCurbIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetAtTimeByCurbIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetAtTimeByCurbIDOK creates a GetAtTimeByCurbIDOK with default headers values
func NewGetAtTimeByCurbIDOK() *GetAtTimeByCurbIDOK {
	return &GetAtTimeByCurbIDOK{}
}

/*GetAtTimeByCurbIDOK handles this case with default header values.

Segments of the requested curb.
*/
type GetAtTimeByCurbIDOK struct {
	Payload *models.SegmentTimeFeatureCollection
}

func (o *GetAtTimeByCurbIDOK) Error() string {
	return fmt.Sprintf("[GET /bycurb/{id}/time_rules][%d] getAtTimeByCurbIdOK  %+v", 200, o.Payload)
}

func (o *GetAtTimeByCurbIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SegmentTimeFeatureCollection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAtTimeByCurbIDForbidden creates a GetAtTimeByCurbIDForbidden with default headers values
func NewGetAtTimeByCurbIDForbidden() *GetAtTimeByCurbIDForbidden {
	return &GetAtTimeByCurbIDForbidden{}
}

/*GetAtTimeByCurbIDForbidden handles this case with default header values.

This method requires an `access_key` and it is either missing or invalid, or the the credentials provided are not sufficient for access to the specified resource.
*/
type GetAtTimeByCurbIDForbidden struct {
	Payload *models.Error
}

func (o *GetAtTimeByCurbIDForbidden) Error() string {
	return fmt.Sprintf("[GET /bycurb/{id}/time_rules][%d] getAtTimeByCurbIdForbidden  %+v", 403, o.Payload)
}

func (o *GetAtTimeByCurbIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAtTimeByCurbIDNotFound creates a GetAtTimeByCurbIDNotFound with default headers values
func NewGetAtTimeByCurbIDNotFound() *GetAtTimeByCurbIDNotFound {
	return &GetAtTimeByCurbIDNotFound{}
}

/*GetAtTimeByCurbIDNotFound handles this case with default header values.

No curb exists with this ID.
*/
type GetAtTimeByCurbIDNotFound struct {
	Payload *models.Error
}

func (o *GetAtTimeByCurbIDNotFound) Error() string {
	return fmt.Sprintf("[GET /bycurb/{id}/time_rules][%d] getAtTimeByCurbIdNotFound  %+v", 404, o.Payload)
}

func (o *GetAtTimeByCurbIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAtTimeByCurbIDDefault creates a GetAtTimeByCurbIDDefault with default headers values
func NewGetAtTimeByCurbIDDefault(code int) *GetAtTimeByCurbIDDefault {
	return &GetAtTimeByCurbIDDefault{
		_statusCode: code,
	}
}

/*GetAtTimeByCurbIDDefault handles this case with default header values.

Unexpected error
*/
type GetAtTimeByCurbIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get at time by curb id default response
func (o *GetAtTimeByCurbIDDefault) Code() int {
	return o._statusCode
}

func (o *GetAtTimeByCurbIDDefault) Error() string {
	return fmt.Sprintf("[GET /bycurb/{id}/time_rules][%d] get_at_time_by_curb_id default  %+v", o._statusCode, o.Payload)
}

func (o *GetAtTimeByCurbIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
