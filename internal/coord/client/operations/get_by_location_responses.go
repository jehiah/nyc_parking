// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/jehiah/nyc_parking/internal/coord/models"
)

// GetByLocationReader is a Reader for the GetByLocation structure.
type GetByLocationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetByLocationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetByLocationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewGetByLocationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetByLocationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetByLocationOK creates a GetByLocationOK with default headers values
func NewGetByLocationOK() *GetByLocationOK {
	return &GetByLocationOK{}
}

/*GetByLocationOK handles this case with default header values.

Segments of all the curbs within the radius.
*/
type GetByLocationOK struct {
	Payload *models.SegmentRulesFeatureCollection
}

func (o *GetByLocationOK) Error() string {
	return fmt.Sprintf("[GET /bylocation/all_rules][%d] getByLocationOK  %+v", 200, o.Payload)
}

func (o *GetByLocationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SegmentRulesFeatureCollection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByLocationForbidden creates a GetByLocationForbidden with default headers values
func NewGetByLocationForbidden() *GetByLocationForbidden {
	return &GetByLocationForbidden{}
}

/*GetByLocationForbidden handles this case with default header values.

This method requires an `access_key` and it is either missing or invalid, or the the credentials provided are not sufficient for access to the specified resource.
*/
type GetByLocationForbidden struct {
	Payload *models.Error
}

func (o *GetByLocationForbidden) Error() string {
	return fmt.Sprintf("[GET /bylocation/all_rules][%d] getByLocationForbidden  %+v", 403, o.Payload)
}

func (o *GetByLocationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByLocationDefault creates a GetByLocationDefault with default headers values
func NewGetByLocationDefault(code int) *GetByLocationDefault {
	return &GetByLocationDefault{
		_statusCode: code,
	}
}

/*GetByLocationDefault handles this case with default header values.

Unexpected error
*/
type GetByLocationDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get by location default response
func (o *GetByLocationDefault) Code() int {
	return o._statusCode
}

func (o *GetByLocationDefault) Error() string {
	return fmt.Sprintf("[GET /bylocation/all_rules][%d] get_by_location default  %+v", o._statusCode, o.Payload)
}

func (o *GetByLocationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
